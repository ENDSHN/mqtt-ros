# Base using ros-noetic-ros-base
FROM ros:noetic-ros-base

# Update and install packages
RUN apt-get update && apt-get install --no-install-recommends -y

# Copy files into docker image
RUN mkdir -p /catkin_ws/src/
WORKDIR /catkin_ws/
COPY src/ ./src

# Install required applications
RUN apt-get install git build-essential gcc make cmake cmake-gui cmake-curses-gui libyaml-cpp-dev -y

# Download the ros_msg_parser and rosmsg_cpp gits
WORKDIR /catkin_ws/src/
RUN git clone --depth=1 https://github.com/facontidavide/ros_msg_parser.git
RUN git clone --depth=1 https://github.com/ctu-vras/rosmsg_cpp.git

# Download the MQTT Paho C git and build it
RUN mkdir -p /catkin_ws/src/mqtt_ros/include/mqtt_ros/
WORKDIR /catkin_ws/src/mqtt_ros/include/mqtt_ros/
RUN git clone --depth=1 https://github.com/eclipse/paho.mqtt.c.git
WORKDIR /catkin_ws/src/mqtt_ros/include/mqtt_ros/paho.mqtt.c/
RUN cmake -Bbuild -H. -DPAHO_ENABLE_TESTING=OFF -DPAHO_BUILD_STATIC=ON -DPAHO_WITH_SSL=ON -DPAHO_HIGH_PERFORMANCE=ON
RUN cmake --build build/ --target install
RUN ldconfig

# Download the MQTT Paho C++ git and build it
WORKDIR /catkin_ws/src/mqtt_ros/include/mqtt_ros/
RUN git clone --depth=1 https://github.com/eclipse/paho.mqtt.cpp.git
WORKDIR /catkin_ws/src/mqtt_ros/include/mqtt_ros/paho.mqtt.cpp/
RUN cmake -Bbuild -H. -DPAHO_BUILD_STATIC=ON -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=FALSE
RUN cmake --build build/ --target install
RUN ldconfig

# Compile everything
WORKDIR /catkin_ws/
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin_make install -j8 -l8 -DCMAKE_INSTALL_PREFIX=/opt/ros/noetic/"

# Copy the config files into the container
RUN mkdir -p /catkin_ws/src/mqtt_ros/config/
WORKDIR /catkin_ws/src/mqtt_ros/
COPY config/ ./config

# Start the environment
COPY entrypoint_mqtt_ros.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]